# Overlay to docker-compose.yml file for production.
version: "3.6"
services:

  proxy:
    image: traefik:v2.9
    volumes:
      - certificate:/letsencrypt
    command:
      # Use DEBUG for more logs
      - --log.level=WARN
      # Enable the dashboard API
      - --api
      # Use docker (in compose mode)
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Constraint to only use services with the label TRAEFIK_TAG
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
      # Use HTTPS (port 443) as entrypoint
      - --entrypoints.websecure.address=:443
      # Certificate resolver: Use letsencrypt with TLS challenge
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${EMAIL?Variable not set}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - 443:443

  celeryworker:
    environment:
      - SERVER_HOST=https://${DOMAIN?Variable not set}

  backend:
    environment:
      - SERVER_HOST=https://${DOMAIN?Variable not set}
    labels:
      # Constraint tag
      - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
      # Service is served on port 80
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=80
      # Setup router
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend.entrypoints=websecure
      # Certificate resolver
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend.tls.certresolver=le

  frontend:
    environment:
      - SERVER_HOST=https://${DOMAIN?Variable not set}
    labels:
      # Constraint tag
      - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
      # Service is served on port 80
      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=80
      # Setup router
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend.entrypoints=websecure
      # Certificate resolver
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend.tls.certresolver=le

volumes:
  certificate:
