version: "3.6"
services:

  proxy:
    ports:
      - "80:80"
      - "8090:8080"
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      # from the env var TRAEFIK_TAG
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Disable Docker Swarm mode for local development
      # - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true


  celeryworker:
    build:
      context: ./backend
    volumes:
      - ./backend/app:/work/app

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend/app:/work/app
    environment:
      - SERVER_HOST=http://${DOMAIN?Variable not set}
    command: dev
    labels:
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=5000

  frontend:
    build:
      context: ./frontend
      dockerfile: development.Dockerfile
    user: ${USER?User not set}
    volumes:
      - ./frontend/src/:/app/src/
    command: start
    labels:
      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=3000

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false
